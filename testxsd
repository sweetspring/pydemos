# -*- coding: utf-8 -*-

# http://stackoverflow.com/questions/14404731/pyhon-image-comparison-regardless-of-size
# http://www.guguncube.com/1656/python-image-similarity-comparison-using-several-techniques

import os
import errno
import itertools
import requests
import time
from PIL import Image
from numpy import average, linalg, dot
 
 
def main():
    import tempfile
    import shutil

    base_directory = tempfile.mkdtemp()

    #array of image urls we want checked, they will each be compared with all other images in the list
    image_urls = [ 
'F:/data/img/small/2365_s7917_120.jpg',
'F:/data/img/small/2547_s7918_120.jpg',
'F:/data/img/small/553_s7311_120.jpg',
'F:/data/img/small/8_s7721_120.jpg',
'F:/data/img/small/1784_s7512_120.jpg',
'F:/data/img/small/758_s7375_120.jpg',
'F:/data/img/small/575_s6532_120.jpg',
'F:/data/img/small/2450_s5713_120.jpg',
'F:/data/img/small/2394_s6724_120.jpg',
'F:/data/img/small/694_s6752_120.jpg',
'F:/data/img/small/1885_s6453_120.jpg',
'F:/data/img/small/2_s5795_120.jpg',
'F:/data/img/small/1437_s7259_120.jpg',
'F:/data/img/small/1436_s7257_120.jpg',
'F:/data/img/small/4_s7258_120.jpg',
'F:/data/img/small/3014_s7247_120.jpg',
'F:/data/img/small/1645_s3202_120.jpg',
'F:/data/img/small/957_s6161_120.jpg',
'F:/data/img/small/7_s7213_120.jpg',
'F:/data/img/small/1543_s7770_120.jpg',
'F:/data/img/small/439_s4603_120.jpg',
'F:/data/img/small/1597_s4921_120.jpg',
'F:/data/img/small/1_s6624_120.jpg',
'F:/data/img/small/5_s4860_120.jpg',
'F:/data/img/small/1887_s4772_120.jpg',
'F:/data/img/small/1439_s7294_120.jpg',
'F:/data/img/small/1438_s7293_120.jpg',
'F:/data/img/small/627_s7292_120.jpg',
'F:/data/img/small/452_s6351_120.jpg',
'F:/data/img/small/1522_s6162_120.jpg',
'F:/data/img/small/6_s5512_120.jpg',
'F:/data/img/small/1785_s4563_120.jpg',
'F:/data/img/small/1442_s6388_120.jpg',
'F:/data/img/small/1441_s5896_120.jpg',
'F:/data/img/small/1440_s6386_120.jpg',
'F:/data/img/small/3_s5897_120.jpg',
'F:/data/img/small/3118_s7573_120.jpg',
'F:/data/img/small/2371_s7825_120.jpg',
'F:/data/img/small/2862_s6818_120.jpg',
'F:/data/img/small/1287_s6238_120.jpg',
'F:/data/img/small/1521_s6174_120.jpg',
'F:/data/img/small/1825_s7356_120.jpg',
'F:/data/img/small/1625_s7426_120.jpg',
'F:/data/img/small/1626_s7695_120.jpg',
'F:/data/img/small/3185_s7805_120.jpg',
'F:/data/img/small/343_s8092_120.jpg',
'F:/data/img/small/968_s7414_120.jpg',
'F:/data/img/small/938_s7942_120.jpg',
'F:/data/img/small/517_s7748_120.jpg',
'F:/data/img/small/1617_s6283_120.jpg',
'F:/data/img/small/1616_s6355_120.jpg',
'F:/data/img/small/342_s1070_120.jpg',
'F:/data/img/small/1303_s2389_120.jpg',
'F:/data/img/small/1394_s2684_120.jpg',
'F:/data/img/small/3202_s7842_120.jpg',
'F:/data/img/small/21_s7340_120.jpg',
'F:/data/img/small/22_s5553_120.jpg',
'F:/data/img/small/2769_s6554_120.jpg',
'F:/data/img/small/1391_s7762_120.jpg',
'F:/data/img/small/17_s7643_120.jpg',
'F:/data/img/small/2399_s6826_120.jpg',
'F:/data/img/small/2489_s5854_120.jpg',
'F:/data/img/small/2848_s6759_120.jpg',
'F:/data/img/small/2686_s6359_120.jpg',
'F:/data/img/small/1568_s7650_120.jpg',
'F:/data/img/small/1972_s7390_120.jpg',
'F:/data/img/small/2407_s5598_120.jpg',
'F:/data/img/small/1327_s5431_120.jpg',
'F:/data/img/small/2606_s8048_120.jpg',
'F:/data/img/small/1447_s7181_120.jpg',
'F:/data/img/small/1448_s5059_120.jpg',
'F:/data/img/small/11_s5056_120.jpg',
'F:/data/img/small/1449_s6618_120.jpg',
'F:/data/img/small/15_s7483_120.jpg',
'F:/data/img/small/1566_s6619_120.jpg',
'F:/data/img/small/14_s7140_120.jpg',
'F:/data/img/small/16_s5841_120.jpg',
'F:/data/img/small/1177_s5914_120.jpg',
'F:/data/img/small/10_s5084_120.jpg',
'F:/data/img/small/2917_s6987_120.jpg',
'F:/data/img/small/19_s6183_120.jpg',
'F:/data/img/small/12_s4500_120.jpg',
'F:/data/img/small/1371_s5456_120.jpg',
'F:/data/img/small/1372_s5766_120.jpg',
'F:/data/img/small/1444_s2833_120.jpg',
'F:/data/img/small/1443_s2834_120.jpg',
'F:/data/img/small/1446_s2835_120.jpg',
'F:/data/img/small/1790_s6460_120.jpg',
'F:/data/img/small/1445_s2836_120.jpg',
'F:/data/img/small/13_s6459_120.jpg',
'F:/data/img/small/1639_s5058_120.jpg',
'F:/data/img/small/1450_s4119_120.jpg',
'F:/data/img/small/1459_s2852_120.jpg',
'F:/data/img/small/2415_s7400_120.jpg',
'F:/data/img/small/1452_s7095_120.jpg',
'F:/data/img/small/2655_s6302_120.jpg',
'F:/data/img/small/2377_s5509_120.jpg',
'F:/data/img/small/1455_s5060_120.jpg',
'F:/data/img/small/1456_s6620_120.jpg',
'F:/data/img/small/1943_s7103_120.jpg',
'F:/data/img/small/1457_s6486_120.jpg',
'F:/data/img/small/1458_s6485_120.jpg',
'F:/data/img/small/1451_s2840_120.jpg',
'F:/data/img/small/1454_s5099_120.jpg',
'F:/data/img/small/39_s5770_120.jpg',
'F:/data/img/small/2951_s7049_120.jpg',
'F:/data/img/small/40_s6205_120.jpg',
'F:/data/img/small/2452_s6209_120.jpg',
'F:/data/img/small/2814_s7658_120.jpg',
'F:/data/img/small/3099_s7530_120.jpg',
'F:/data/img/small/1338_s6559_120.jpg',
'F:/data/img/small/3207_s7857_120.jpg',
'F:/data/img/small/1388_s7582_120.jpg',
'F:/data/img/small/1182_s4948_120.jpg',
'F:/data/img/small/1180_s6019_120.jpg',
'F:/data/img/small/23_s7172_120.jpg',
'F:/data/img/small/450_s5494_120.jpg',
'F:/data/img/small/1760_s7651_120.jpg',
'F:/data/img/small/29_s6716_120.jpg',
'F:/data/img/small/2457_s4810_120.jpg',
'F:/data/img/small/3009_s7233_120.jpg',
'F:/data/img/small/24_s6691_120.jpg',
'F:/data/img/small/1469_s5806_120.jpg',
'F:/data/img/small/1468_s4538_120.jpg',
'F:/data/img/small/2798_s6614_120.jpg',
'F:/data/img/small/2881_s6889_120.jpg',
'F:/data/img/small/2882_s6890_120.jpg',
'F:/data/img/small/3078_s7471_120.jpg',
'F:/data/img/small/26_s6935_120.jpg',
'F:/data/img/small/27_s7082_120.jpg',
'F:/data/img/small/31_s7596_120.jpg',
'F:/data/img/small/28_s6734_120.jpg',
'F:/data/img/small/25_s7522_120.jpg',
'F:/data/img/small/37_s7835_120.jpg',
'F:/data/img/small/1607_s7066_120.jpg',
'F:/data/img/small/2484_s6562_120.jpg',
'F:/data/img/small/2787_s6591_120.jpg',
'F:/data/img/small/3190_s7815_120.jpg',
'F:/data/img/small/2912_s7885_120.jpg',
'F:/data/img/small/2985_s7157_120.jpg',
'F:/data/img/small/2984_s7156_120.jpg',
'F:/data/img/small/2642_s7641_120.jpg',
'F:/data/img/small/2478_s5833_120.jpg',
'F:/data/img/small/1783_s4886_120.jpg',
'F:/data/img/small/1808_s5976_120.jpg',
'F:/data/img/small/38_s2094_120.jpg',
'F:/data/img/small/33_s7126_120.jpg',
'F:/data/img/small/1243_s6601_120.jpg',
'F:/data/img/small/32_s2536_120.jpg',
'F:/data/img/small/2590_s6060_120.jpg',
'F:/data/img/small/1845_s7173_120.jpg',
'F:/data/img/small/1886_s6033_120.jpg',
'F:/data/img/small/1461_s6717_120.jpg',
'F:/data/img/small/1460_s6387_120.jpg',
'F:/data/img/small/2456_s6476_120.jpg',
'F:/data/img/small/2883_s6891_120.jpg',
'F:/data/img/small/2818_s6669_120.jpg',
'F:/data/img/small/3079_s7472_120.jpg',
'F:/data/img/small/1462_s7620_120.jpg',
'F:/data/img/small/1120_s4652_120.jpg',
'F:/data/img/small/1465_s4494_120.jpg',
'F:/data/img/small/1464_s7836_120.jpg',
'F:/data/img/small/2782_s6579_120.jpg',
'F:/data/img/small/2788_s6594_120.jpg',
'F:/data/img/small/1930_s5828_120.jpg',
'F:/data/img/small/1463_s7127_120.jpg',
'F:/data/img/small/1466_s2861_120.jpg',
'F:/data/img/small/2764_s7793_120.jpg',
'F:/data/img/small/148_s6271_120.jpg',
'F:/data/img/small/152_s6026_120.jpg',
'F:/data/img/small/561_s6995_120.jpg',
'F:/data/img/small/1109_s7599_120.jpg',
'F:/data/img/small/1799_s7510_120.jpg',
'F:/data/img/small/149_s7211_120.jpg',
'F:/data/img/small/2581_s6047_120.jpg',
'F:/data/img/small/3261_s8010_120.jpg',
'F:/data/img/small/3262_s8011_120.jpg',
'F:/data/img/small/1558_s7501_120.jpg',
'F:/data/img/small/151_s6944_120.jpg',
'F:/data/img/small/2665_s6531_120.jpg',
'F:/data/img/small/3054_s7347_120.jpg',
'F:/data/img/small/1798_s7420_120.jpg',
'F:/data/img/small/936_s6065_120.jpg',
'F:/data/img/small/150_s7427_120.jpg',
'F:/data/img/small/1174_s1805_120.jpg',
'F:/data/img/small/964_s1465_120.jpg',
'F:/data/img/small/1791_s4408_120.jpg',
'F:/data/img/small/845_s1534_120.jpg',
'F:/data/img/small/1733_s6385_120.jpg',
'F:/data/img/small/2638_s7225_120.jpg',
'F:/data/img/small/1472_s5978_120.jpg',
'F:/data/img/small/123_s5774_120.jpg',
'F:/data/img/small/122_s6869_120.jpg',
'F:/data/img/small/1384_s6553_120.jpg',
'F:/data/img/small/1089_s7733_120.jpg',
'F:/data/img/small/121_s6885_120.jpg',
'F:/data/img/small/2842_s7909_120.jpg',
'F:/data/img/small/2903_s6956_120.jpg',
'F:/data/img/small/3077_s7460_120.jpg',
'F:/data/img/small/3091_s7507_120.jpg'
  ]

    t1 = time.time()
    sims = compare_similarity(image_urls)
    t2 = time.time()
    print('time:' + str(t2-t1))
    #print (str(sims))
    prefile=open('../data/xcarsim2.csv', 'w')
    for sim in sims:
        similarity = sim['similarity']
        images =  sim['images']
        prefile.write(str(similarity)+ " \t" + images[0] + " \t"  +  images[1]  + "\n") 
    prefile.close()

    #delete all files in directory when done
    #shutil.rmtree(base_directory)

def compare_similarity(image_urls):
    largest_similarity = 0.0
    matching_images = []
    simlist = []
#    image_comparison_dict = {
#        'similarity': largest_similarity,
#        'images': []
#    }

    #create list of possible pairings
    url_pairs = list(itertools.combinations(image_urls, 2))

    for pair in url_pairs:
        
        image_filepath1 = pair[0]
        image_filepath2 = pair[1]
 
        similarity = image_similarity_vectors_via_numpy(image_filepath1, image_filepath2)
        matching_images = [image_filepath1, image_filepath2]
        image_comparison_dict = {
                'similarity': similarity,
                'images': matching_images
            }
        simlist.append(image_comparison_dict)
##        if similarity > largest_similarity:
##            largest_similarity = similarity
##            matching_images = [image_filepath1, image_filepath2]
##            image_comparison_dict = {
##                'similarity': largest_similarity,
##                'images': matching_images
##            }

    return simlist

def image_similarity_vectors_via_numpy(filepath1, filepath2):

    image1 = Image.open(filepath1)
    image2 = Image.open(filepath2)
 
#    image1 = get_thumbnail(image1)
#    image2 = get_thumbnail(image2)
    
    images = [image1, image2]
    vectors = []
    norms = []
    for image in images:
        vector = []
        for pixel_tuple in image.getdata():
            vector.append(average(pixel_tuple))
        vectors.append(vector)
        norms.append(linalg.norm(vector, 2))
    a, b = vectors
    a_norm, b_norm = norms
    # If we did not resize the images to be equal, we would get an error here
    # ValueError: matrices are not aligned
    res = dot(a / a_norm, b / b_norm)
    return res
 
def get_thumbnail(image, size=(40,30), greyscale=False):
    #get a smaller version of the image - makes comparison much faster/easier
    image = image.resize(size, Image.ANTIALIAS)
    if greyscale:
        #convert image to greyscale
        image = image.convert('L')
    return image
 
def mkdir_p_filepath(path):
    dirpath = os.path.dirname(os.path.abspath(path))
    mkdir_p(dirpath)
 
def mkdir_p(path):
    try:
        os.makedirs(path)
    except OSError as exc:
        if exc.errno == errno.EEXIST and os.path.isdir(path):
            pass
        else: raise

def download_file(url, filepath):
    _USER_AGENT = 'Mozilla/5.0 (Windows NT 6.2; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1667.0 Safari/537.36'
    headers = { 'user-agent': _USER_AGENT }
    r = requests.get(url, headers=headers, timeout=60, stream=True)
    with open(filepath, 'wb') as f:
        for chunk in r.iter_content(chunk_size=1024): 
            if chunk:
                f.write(chunk)
                f.flush()
    return filepath
 
 
if __name__ == "__main__":
    main()
